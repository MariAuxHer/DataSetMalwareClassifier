from pathlib import Path
from opseqtoindex import opseq_to_index

opseq_labels = []

class opseqLabels:
    def __init__(self, opseq: list[int], label: int):
        self.opseq = opseq
        self.label = label

def printListOpseqLabels(list: list[opseqLabels]): 
    for i in range(len(list)): 
        print(list[i].opseq)
        print(list[i].label)

def readFiles(): 
    files = Path("./Benign").glob('*.opseq')
    for f in files:
        indices_list = open_opseq(f)
        assert 218 in indices_list
        data = opseqLabels(indices_list, 0)
        opseq_labels.append(data)

    filesMalware = Path("./Malware").glob('*.opseq')

    for f in filesMalware:
        indices_list = open_opseq(f)
        assert 218 in indices_list
        data = opseqLabels(indices_list, 1)
        opseq_labels.append(data)

def _test():
    opseq_path = Path("short.opseq")
    indices_list = open_opseq(opseq_path)
    assert 218 in indices_list
    print(indices_list)

def open_opseq(opseq_path: Path) -> list[int]:
    with open(opseq_path) as file:
        lines = file.readlines()
    indices_list = []
    for line in lines:
        chunks = [line[i : i + 2] for i in range(0, len(line), 2)]
        indices_list += opseq_to_index(chunks)
    return indices_list

if __name__ == "__main__":
    #_test() 
    readFiles()
    printListOpseqLabels(opseq_labels)
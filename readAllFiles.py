from pathlib import Path
from opseqtoindex import opseq_to_index

opseq_labels = []


def calcMaxLength() -> int: 
    maxLength = 0
    bfiles = Path("./M2").glob('*.opseq')
    for f in bfiles:
        indices_list = open_opseq(f)
        #print("\n\nnew list\n\n")
        #print(indices_list)
        if (maxLength < len(indices_list)):
            maxLength = len(indices_list)
        #print("\n\nmaxLength\n\n")
        #print(maxLength)
        #print("\n\ncurrent length\n\n")
        #print(len(indices_list))


    mfiles = Path("./B2").glob('*.opseq')
    for f in mfiles:
        indices_list = open_opseq(f)
        #print("\n\nnew list\n\n")
        #print(indices_list)
        if (maxLength < len(indices_list)):
            maxLength = len(indices_list)
        #print("\n\nmaxLength\n\n")
        #print(maxLength)
        #print("\n\ncurrent length\n\n")
        #print(len(indices_list))

    return maxLength

class opseqLabels:
    def __init__(self, opseq: list[int], label: int):
        self.opseq = opseq
        self.label = label

def printListOpseqLabels(list: list[opseqLabels]): 
    for i in range(len(list)): 
        print("\n\nlen opseq\n\n")
        print(len(list[i].opseq))
        print("\n\n")
        print(list[i].opseq)
        print(list[i].label)

def readFiles(): 
    maxLength = calcMaxLength()
    files = Path("./M2").glob('*.opseq')
    for f in files:
        indices_list = open_opseq(f)
        while len(indices_list) < maxLength:
            indices_list.append(0)
        assert 218 in indices_list
        data = opseqLabels(indices_list, 0)
        opseq_labels.append(data)

    filesMalware = Path("./B2").glob('*.opseq')

    for f in filesMalware:
        indices_list = open_opseq(f)
        while len(indices_list) < maxLength:
            indices_list.append(0)
        assert 218 in indices_list
        data = opseqLabels(indices_list, 1)
        opseq_labels.append(data)

def _test():
    opseq_path = Path("short.opseq")
    indices_list = open_opseq(opseq_path)
   
    print(indices_list)
    print("\n\nlen\n\n")
    print(len(indices_list))

def open_opseq(opseq_path: Path) -> list[int]:
    with open(opseq_path) as file:
        lines = file.readlines()
    indices_list = []
    for line in lines:
        chunks = [line[i : i + 2] for i in range(0, len(line), 2)]
        indices_list += opseq_to_index(chunks)
    return indices_list

if __name__ == "__main__":
    #calcMaxLength()
    #_test() 
    readFiles()
    printListOpseqLabels(opseq_labels)
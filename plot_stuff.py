import argparse
import pathlib

import matplotlib.pyplot as plt
import pandas as pd


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--results-folder", type=str, default="results")
    args = parser.parse_args()

    results_folder = pathlib.Path(args.results_folder)
    plot_loss_and_accuracy(results_folder / "debug_cnn", "CNN", 100)
    plot_loss_and_accuracy(results_folder / "debug_transformer", "Transformer", 100)

def plot_loss_and_accuracy(results_folder, name, epoch_limit):
    results = pd.read_csv(results_folder / "results.csv").head(epoch_limit)

    plt.figure(figsize=(6, 3))
    plt.plot(results["epoch"], results["train_loss"], label="train loss", linewidth=2)
    plt.plot(results["epoch"], results["validation_loss"], label="validation loss", linewidth=2)
    plt.xlabel("epoch")
    plt.ylabel("loss")
    plt.legend()
    plt.title(f"{name} Loss")
    plt.tight_layout()
    plt.savefig(results_folder / "loss.png", dpi=600)
    plt.clf()

    plt.figure(figsize=(6, 3))
    plt.plot(results["epoch"], results["train_accuracy"], label="train accuracy", linewidth=2)
    plt.plot(results["epoch"], results["validation_accuracy"], label="validation accuracy", linewidth=2)
    plt.xlabel("epoch")
    plt.ylabel("accuracy")
    plt.ylim(0.5, 1)
    plt.legend()
    plt.title(f"{name} Accuracy")
    plt.tight_layout()
    plt.savefig(results_folder / "accuracy.png", dpi=600)
    plt.clf()


if __name__ == "__main__":
    main()

#!/opt/homebrew/bin/python3
import torch
from torch.utils.data import DataLoader, TensorDataset
from pathlib import Path
from reforming import processOpseqLabels

def dataSetUp(opcode_sequences: torch.Tensor, labels: torch.Tensor): 
    dataset = TensorDataset(opcode_sequences, labels)
    BATCH_SIZE = 32

    train_dataloader = DataLoader(dataset, batch_size=BATCH_SIZE, shuffle=True)
    validation_dataloader = DataLoader(dataset, batch_size=BATCH_SIZE, shuffle=True)



if __name__ == "__main__":
    tensor_of_tensors_opcode_sequences = torch.load('tensor_of_tensors_opcode_sequences.pt')
    labels = torch.load('labels.pt')
    dataSetUp(tensor_of_tensors_opcode_sequences, labels)


    """
    print("\n\nTENSORS\n\n")
    print(tensor_of_tensors_opcode_sequences)
    print("\n\n")
    print(labels)
    print("\n\n")
    print(tensor_of_tensors_opcode_sequences.size())
    print(labels.size())
    """

